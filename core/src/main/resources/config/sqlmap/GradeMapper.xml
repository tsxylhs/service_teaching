<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teach.edu.core.mapper.GradeMapper">
  <resultMap id="BaseResultMap" type="com.teach.edu.core.entity.Grade">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="student_id" jdbcType="BIGINT" property="studentId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="course_grade" jdbcType="INTEGER" property="courseGrade" />
    <result column="teach_name" jdbcType="VARCHAR" property="teachName" />
    <result column="grades" jdbcType="INTEGER" property="grades" />
    <result column="test_scores" jdbcType="INTEGER" property="testScores" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, updated_at, created_at, deleted_at, student_id, course_name, course_grade, teach_name, 
    grades, test_scores
  </sql>
  <select id="selectByExample" parameterType="com.teach.edu.core.entity.GradeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from grade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from grade
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from grade
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.teach.edu.core.entity.GradeExample">
    delete from grade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.teach.edu.core.entity.Grade">
    insert into grade (id, updated_at, created_at, 
      deleted_at, student_id, course_name, 
      course_grade, teach_name, grades, 
      test_scores)
    values (#{id,jdbcType=BIGINT}, #{updatedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{deletedAt,jdbcType=TIMESTAMP}, #{studentId,jdbcType=BIGINT}, #{courseName,jdbcType=VARCHAR}, 
      #{courseGrade,jdbcType=INTEGER}, #{teachName,jdbcType=VARCHAR}, #{grades,jdbcType=INTEGER}, 
      #{testScores,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.teach.edu.core.entity.Grade">
    insert into grade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="deletedAt != null">
        deleted_at,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="courseGrade != null">
        course_grade,
      </if>
      <if test="teachName != null">
        teach_name,
      </if>
      <if test="grades != null">
        grades,
      </if>
      <if test="testScores != null">
        test_scores,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseGrade != null">
        #{courseGrade,jdbcType=INTEGER},
      </if>
      <if test="teachName != null">
        #{teachName,jdbcType=VARCHAR},
      </if>
      <if test="grades != null">
        #{grades,jdbcType=INTEGER},
      </if>
      <if test="testScores != null">
        #{testScores,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.teach.edu.core.entity.GradeExample" resultType="java.lang.Long">
    select count(*) from grade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update grade
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deletedAt != null">
        deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=BIGINT},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.courseGrade != null">
        course_grade = #{record.courseGrade,jdbcType=INTEGER},
      </if>
      <if test="record.teachName != null">
        teach_name = #{record.teachName,jdbcType=VARCHAR},
      </if>
      <if test="record.grades != null">
        grades = #{record.grades,jdbcType=INTEGER},
      </if>
      <if test="record.testScores != null">
        test_scores = #{record.testScores,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update grade
    set id = #{record.id,jdbcType=BIGINT},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      student_id = #{record.studentId,jdbcType=BIGINT},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      course_grade = #{record.courseGrade,jdbcType=INTEGER},
      teach_name = #{record.teachName,jdbcType=VARCHAR},
      grades = #{record.grades,jdbcType=INTEGER},
      test_scores = #{record.testScores,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.teach.edu.core.entity.Grade">
    update grade
    <set>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseGrade != null">
        course_grade = #{courseGrade,jdbcType=INTEGER},
      </if>
      <if test="teachName != null">
        teach_name = #{teachName,jdbcType=VARCHAR},
      </if>
      <if test="grades != null">
        grades = #{grades,jdbcType=INTEGER},
      </if>
      <if test="testScores != null">
        test_scores = #{testScores,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.teach.edu.core.entity.Grade">
    update grade
    set updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      student_id = #{studentId,jdbcType=BIGINT},
      course_name = #{courseName,jdbcType=VARCHAR},
      course_grade = #{courseGrade,jdbcType=INTEGER},
      teach_name = #{teachName,jdbcType=VARCHAR},
      grades = #{grades,jdbcType=INTEGER},
      test_scores = #{testScores,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>